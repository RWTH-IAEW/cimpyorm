image: docker:git
services:
- docker:dind

stages:
- build
- test:unit
- test:integration
- deploy:build
- deploy:check
- deploy:upload
- doc


variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  CACHE_IMAGE: $CI_REGISTRY_IMAGE:cache
  MYSQL_DATABASE: cim
  MYSQL_ALLOW_EMPTY_PASSWORD: "1"
  PYPI_ENDPOINT: $PYPI_ENDPOINT
  PYPI_USER: $PYPI_USER
  PYPI_PASSWORD: $PYPI_PASSWORD

build:
  tags:
    - linux
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --cache-from $CACHE_IMAGE -t $CONTAINER_TEST_IMAGE -t $CACHE_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
    - docker push $CACHE_IMAGE

.unit:
  tags:
    - docker
  stage: test:unit
  image: $CONTAINER_TEST_IMAGE
  except:
    - Releases

pytest:
  extends: .unit
  script:
    - pytest --ignore=cimpyorm/Test/Integration --ignore=cimpyorm/Test/Deployment --cov
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'

pylint:
  extends: .unit
  script:
    - ./pylint.sh

.integration:
  tags:
    - docker
  image: $CONTAINER_TEST_IMAGE
  stage: test:integration
  retry: 1
  except: 
    - Releases

integration:MariaDB:
  extends: .integration
  services:
    - mariadb
  script:
    - pytest --maxfail=1 cimpyorm/Test/Integration/MariaDB

integration:MySQL:
  extends: .integration
  services:
    - mysql
  script:
    - pytest --maxfail=1 cimpyorm/Test/Integration/MySQL

integration:SQLite:
  extends: .integration
  script:
    - pytest --maxfail=1 cimpyorm/Test/Integration/SQLite

pages:
  stage: doc
  only:
    - Releases
  tags:
    - docker
  image: $CONTAINER_TEST_IMAGE
  script:
    - cd docs
    - make html
    - cd ..
    - mkdir public
    - mv docs/_build/html/* public
  artifacts:
    paths:
    - public

.deploy_common:
  only:
    - Releases
  tags:
    - docker
  image: python

build_dist:
  extends: .deploy_common
  stage: deploy:build
  script:
    - pip install -q poetry
    - poetry build
  artifacts:
    when: on_success
    expire_in: 1 week
    paths:
      - dist

check:
  only:
    - Releases
  tags:
    - linux
  stage: deploy:check
  script:
    - mkdir contents
    - tar -xf dist/*.tar.gz --directory contents
    - ls -R contents
  dependencies:
    - build_dist

upload:
  extends: .deploy_common
  stage: deploy:upload
  when: manual
  allow_failure: false
  script:
    - pip install -q twine toml requests pytest
    - twine upload --repository-url $PYPI_ENDPOINT --u $PYPI_USER --p $PYPI_PASSWORD dist/*
    - sleep 20
    - pytest cimpyorm/Test/Deployment
  dependencies:
    - build_dist
